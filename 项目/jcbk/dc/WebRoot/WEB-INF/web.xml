<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.5" xmlns="http://java.sun.com/xml/ns/javaee" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance
	http://www.springmodules.org/schema/cache/springmodules-cache.xsd  
	http://www.springmodules.org/schema/cache/springmodules-ehcache.xsd" 
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee 
	http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">
	
	<display-name>缉查布控系统</display-name>
  
    <!--	启动顺序：context-param====listener====filter====servlet  -->
    <!-- ========================Spring配置================================ --> 
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath:config/applicationContext.xml</param-value>
	</context-param>
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
    <!-- 防止spring内存溢出监听器 -->
	<listener>
		<listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
	</listener>
	
  	<!-- ========================设置编码=================================== -->
	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<async-supported>true</async-supported> 
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<!-- 控制Session的开关 -->
    <filter>
    	<filter-name>openSession</filter-name>
    	<filter-class>org.springframework.orm.hibernate5.support.OpenSessionInViewFilter</filter-class>
    	<init-param>
			<!-- 
			指定org.springframework.orm.hibernate3.LocalSessionFactoryBean在spring配置文件中的名称,默认值为sessionFactory
			     如果LocalSessionFactoryBean在spring中的名称不是sessionFactory,该参数一定要指定,否则会出现找不到sessionFactory的例外
			-->
     		<param-name>sessionFactoryBean</param-name>
   			<param-value>sessionFactory</param-value>
  		</init-param> 
  		<async-supported>true</async-supported> 
    </filter>
    <filter-mapping>
    	<filter-name>openSession</filter-name>
    	<url-pattern>*.do</url-pattern>
    </filter-mapping>
	
	<!-- ========================Spring MVC servlet========================= -->  
    <servlet>  
        <servlet-name>SpringMVCAop</servlet-name>  
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>  
        <init-param>  
            <param-name>contextConfigLocation</param-name>  
            <!-- /WEB-INF/springmvc-servelet.xml或者不需要配置，但名称为dipatcher-servlet.xml -->
            <param-value>classpath:config/springmvc-servelet.xml</param-value>  
        </init-param>  
        <load-on-startup>1</load-on-startup>  
        <async-supported>true</async-supported> 
    </servlet>  
    <servlet-mapping>  
        <servlet-name>SpringMVCAop</servlet-name>  
        <!-- 此处可以可以配置成*.do等，对应struts的后缀习惯 -->  
        <url-pattern>*.do</url-pattern>  
    </servlet-mapping>
    
    <!-- tomcat启动初始化类 -->
	<listener>
        <listener-class>com.dyst.utils.MyServletContextListener</listener-class>
    </listener>
    
    <!-- 如果某个会话在一定时间内未被访问，服务器可以抛弃它以节省内存。单位分钟 -->
	<session-config>
		<session-timeout>30</session-timeout>
	</session-config>
	
	<!--   默认页面 -->
	<welcome-file-list>
		<welcome-file>login.jsp</welcome-file>
	</welcome-file-list>
	
	<!-- 错误页面处理配置,暂时先关闭。部署时打开-->
	<error-page>
		<error-code>404</error-code>
		<location>/common/errorPage/error404.jsp</location>
	</error-page>
	<error-page>
		<exception-type>java.lang.Exception</exception-type>
		<location>/common/errorPage/error500.jsp</location>
	</error-page>
	
	<!-- DWR实时推送 -->
	<servlet-mapping>
		<servlet-name>SpringMVCAop</servlet-name>
		<async-supported>true</async-supported> 
		<url-pattern>/dwr/*</url-pattern>
    </servlet-mapping>
    <!-- ========================log4j配置========================= -->  
    <context-param>
	  <!--log4j配置地址 -->
	  <param-name>log4jConfigLocation</param-name>
	  <!-- <param-value>/WEB-INF/classes/log4j.properties</param-value> -->
	  <param-value>/WEB-INF/classes/config/log4j.xml</param-value>
	</context-param>
	<context-param>
	  <!-- log4j 配置扫描刷新间隔 可以不用 -->
	  <param-name>log4jRefreshInterval</param-name>
	  <param-value>3600000</param-value>
	</context-param>
	<!-- spring里的log4j配置监听器 -->
	<listener>
	  <listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
	</listener>
</web-app>