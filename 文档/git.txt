配置个人的用户名称和电子邮件地址：
git config --global user.name "runoob"
git config --global user.email test@runoob.com

检查版本
git --version

生成秘钥及git授权
ssh-keygen -t rsa -C "chgaoke@163.com"

添加远程库（将本地库与远程库绑定，可以添加多个远程库）
git remote add origin https://github.com/KermitChen/cgk.git（origin是默认的远程版本库名称，默认是在origin上操作）
查看关联的远程库
git remote -v
查看远程库
git remote show origin（远程版本库名称）
删除远程库
git remote rm [别名]


初始化Git仓库
git init

克隆master项目
git clone https://github.com/KermitChen/cgk.git
克隆分支（克隆前，改分支必须提交远程库）
git clone -b <branch name> [remote repository address]
git clone -b hadoop https://github.com/KermitChen/cgk.git


查看当前git状态
git status
查看修改
git diff
添加文件
git add -A（也可以指定某文件）
提交更改
git commit -m "my git"（注释，必须半角双引号）
推送远程库
git push [remote-name远程库名称] [分支名称]
git push origin master
从远程库更新
git fetch <远程仓库名> <远程分支名>:<本地分支名>（从远程仓库的远程某分支下载代码到本地某分支）
git merge <远程仓库名> <远程分支名>:<本地分支名>（从远程仓库的远程某分支下载代码合并到本地仓库，远程的和本地的合并）
或
git pull <远程主机名> <远程分支名>:<本地分支名>



创建目录
mkdir dirname（目录名称）
删除目录或文件
rm -rf dirname/file


创建分支（刚开始主分支需执行一次commit）
git branch document
切换分支
git checkout document
删除本地分支
git branch -d xxx（分支名称）
删除远程分支（先使用git branch -r查看，后执行删除其中某分支，再push到远程）
git branch -r -d origin/hadoop--------》git push origin :hadoop
合并本地某分支到当前分支
git merge xxx（子分支名称）
查看分支
git branch
查看远程分支
git branch -r

查看历史
git log
git log --oneline
git log --oneline --graph

达到一个重要的阶段，并希望永远记住那个特别的提交快照，你可以使用 git tag 给它打上标签
git tag -a v1.0（注释）
查看所有标签
git tag

